name: Release Polyglot Piranha
on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --verbose --examples
      working-directory: polyglot/piranha
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build Wheel
      run: |
        pip install --upgrade maturin
        maturin build --release -o dist
      working-directory: polyglot/piranha
    - name: Build Wheel - universal2
      env:
        DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
        SDKROOT: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
        MACOSX_DEPLOYMENT_TARGET: 10.9
      run: |
        rustup target add aarch64-apple-darwin
        pip install --upgrade maturin
        maturin build --release -o dist --universal2
      working-directory: polyglot/piranha
      if: matrix.os == 'macos-latest'
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      env:
        files: polyglot/piranha/dist/*
        token: ${{ secrets.GITHUB_TOKEN }}
      
  # release:
  #   name: release ${{ matrix.target }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - target: x86_64-pc-windows-gnu
  #           archive: zip
  #         - target: x86_64-unknown-linux-musl
  #           archive: tar.gz tar.xz
  #         - target: x86_64-apple-darwin
  #           archive: zip
  #   steps:
  #     # - uses: actions/checkout@master
  #     # - name: Compile and release rust library
  #     #   uses: rust-build/rust-build.action@v1.3.2
  #     #   env:
  #     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     #   with:
  #     #     RUSTTARGET: ${{ matrix.target }}
  #     #     ARCHIVE_TYPES: ${{ matrix.archive }}
  #     #     SRC_DIR: polyglot/piranha
  #     #     args: --no-default-features
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #         SRC_DIR: polyglot/piranha
  #     - name: Release with Maturin
  #       uses: messense/maturin-action@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         maturin-version: latest
  #         target: ${{ matrix.target }}
  #         command: build
  #         args: --release
  #         SRC_DIR: polyglot/piranha
