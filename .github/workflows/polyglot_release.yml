name: Release Polyglot Piranha
on:
  push:
    tags:
      - "polyglotv0.1.2.5"
    branches:
      - "maturin_action"
jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --verbose --examples
      working-directory: polyglot/piranha
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build Wheel
      run: |
        pip install --upgrade maturin
        maturin build --release -o dist
      working-directory: polyglot/piranha
    - name: Create Github release
      run: |
        gh release create ${{ env.VERSION }} -d -n "${{ env.MESSAGE }}" -t "${{ env.NAME }}" ${{ env.FILES }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: "polyglot_v.0.1.13"
        MESSAGE: "Test release"
        NAME: "Test release"
        FILES: polyglot/piranha/dist/*.whl
    - name: Create Pypi Release 
      run: |
        pip install twine
        twine upload -r testpypi -u ketkara -p ${{ secrets.PYPI_PASSWORD }} dist/*
      working-directory: polyglot/piranha
  
  build_mac_os:
    needs: build_ubuntu
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --verbose --examples
      working-directory: polyglot/piranha
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build Wheel
      run: |
        pip install --upgrade maturin
        maturin build --release -o dist
      working-directory: polyglot/piranha
    - name: Build Wheel - universal2
      env:
        DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
        SDKROOT: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
        MACOSX_DEPLOYMENT_TARGET: 10.9
      run: |
        rustup target add aarch64-apple-darwin
        pip install --upgrade maturin
        maturin build --release -o dist --universal2
      working-directory: polyglot/piranha
    - name: Update Github release
      run: |
        gh release upload ${{ env.VERSION }} ${{ env.FILES }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: "polyglot_v.0.1.13"
        MESSAGE: "Test release"
        NAME: "Test release"
        FILES: polyglot/piranha/dist/*.whl
    - name: Create Pypi Release 
      run: |
        pip install twine
        twine upload -r testpypi -u ketkara -p ${{ secrets.PYPI_PASSWORD }} dist/*
      working-directory: polyglot/piranha
